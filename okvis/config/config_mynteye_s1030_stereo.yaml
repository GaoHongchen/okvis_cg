%YAML:1.0
cameras:
    - {T_SC:
       [ 0.000252295802561, -0.999993183191, -0.00368373713759, 0.0034754435914,
         0.999988020813, 0.00023428420211, 0.00488910433906, -0.0438783079456,
         -0.00488820796955, -0.00368492650992, 0.999981263194, 0.0241411341267,
          0.0, 0.0, 0.0, 1.0],
       image_dimension: [752, 480],
       distortion_coefficients: [-0.0186674636488, -0.00721364101174, 0.0031810686158, -0.0017356524706],
       distortion_type: equidistant,
       focal_length: [367.095719262, 367.191591329],
       principal_point: [366.019160353, 221.216257548]}

    - {T_SC:
       [ -0.00135612616294, -0.999995536828, 0.00266218822644, 0.00383551724508,
         0.999915213399, -0.00132152971095, 0.0129545193465, 0.0761839369525,
         -0.0129509433674, 0.00267953047116, 0.999912542767, 0.0230284923042,
          0.0, 0.0, 0.0, 1.0],
       image_dimension: [752, 480],
       distortion_coefficients: [-0.0207812152498, -0.00107092703894, -0.00285240050393, 0.000202594899686],
       distortion_type: equidistant,
       focal_length: [366.371825407, 366.461196172],
       principal_point: [387.972860336, 250.713958524]}


camera_params:
    camera_rate: 10 # just to manage the expectations of when there should be frames arriving
    sigma_absolute_translation: 0.0 # The standard deviation of the camera extrinsics translation, e.g. 1.0e-10 for online-calib [m].
    sigma_absolute_orientation: 0.0 # The standard deviation of the camera extrinsics orientation, e.g. 1.0e-3 for online-calib [rad].
    sigma_c_relative_translation: 0.0 # The std. dev. of the cam. extr. transl. change between frames, e.g. 1.0e-6 for adaptive online calib (not less for numerics) [m].
    sigma_c_relative_orientation: 0.0 # The std. dev. of the cam. extr. orient. change between frames, e.g. 1.0e-6 for adaptive online calib (not less for numerics) [rad].
    timestamp_tolerance: 0.005 # [s] stereo frame out-of-sync tolerance

imu_params:
    a_max: 39.1836 # acceleration saturation [m/s^2] # 4 * g
    g_max: 8.73 # gyro saturation [rad/s]            # 500 * pi / 180
    sigma_g_c: 0.00888232829671 # gyro noise density [rad/s/sqrt(Hz)]
    sigma_a_c: 0.0268014618074 # accelerometer noise density [m/s^2/sqrt(Hz)]
    sigma_bg: 0.03 # gyro bias prior [rad/s]
    sigma_ba: 0.1 # accelerometer bias prior [m/s^2]
    sigma_gw_c: 0.000379565782927 # gyro drift noise density [rad/s^s/sqrt(Hz)]
    sigma_aw_c: 0.00262960861593 # accelerometer drift noise density [m/s^2/sqrt(Hz)]
    tau: 3600.0 # reversion time constant, currently not in use [s]
    g: 9.81007 # Earth's acceleration due to gravity [m/s^2]
    a0: [ 0.0, 0.0, 0.0 ] # Accelerometer bias [m/s^2]
    imu_rate: 200
    # tranform Body-Sensor (IMU)
    T_BS:
        [1.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 1.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 1.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 1.0000]

# Estimator parameters
numKeyframes: 5 # number of keyframes in optimisation window
numImuFrames: 3 # number of frames linked by most recent nonlinear IMU error terms

# ceres optimization options
ceres_options:
    minIterations: 3   # minimum number of iterations always performed
    maxIterations: 10  # never do more than these, even if not converged
    timeLimit: 0.035   # [s] negative values will set the an unlimited time limit

# detection
detection_options:
    threshold: 40.0      # detection threshold. By default the uniformity radius in pixels
    octaves: 0           # number of octaves for detection. 0 means single-scale at highest resolution
    maxNoKeypoints: 400  # restrict to a maximum of this many keypoints per image (strongest ones)

# delay of images [s]:
imageDelay: 0.0  # in case you are using a custom setup, you will have to calibrate this. 0 for the VISensor.

# display debug images?
displayImages: true  # displays debug video and keyframe matches. May be slow.

# use direct driver
useDriver: true 

# some options for how and what to publish -- optional in ROS-free version
publishing_options:
    publish_rate: 200                  # rate at which odometry updates are published only works properly if imu_rate/publish_rate is an integer!!
    publishLandmarks: true             # select, if you want to publish landmarks at all
    landmarkQualityThreshold: 1.0e-2   # landmark with lower quality will not be published
    maximumLandmarkQuality: 0.05       # landmark with higher quality will be published with the maximum colour intensity
    maxPathLength: 20                  # maximum length of the published path
    publishImuPropagatedState: true    # Should the state that is propagated with IMU messages be published? Or just the optimized ones?
    # provide custom World frame Wc
    T_Wc_W:
        [1.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 1.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 1.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 1.0000]
    trackedBodyFrame: B                # B or S, the frame of reference that will be expressed relative to the selected worldFrame
    velocitiesFrame: Wc                # Wc, B or S,  the frames in which the velocities of the selected trackedBodyFrame will be expressed in

